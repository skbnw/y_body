headline,mainEntityOfPage,image,datePublished,dateModified,author,media_en,media_jp,str_count,body,images,external_links
プログラミングって何の役に立つ？学力との関係は？専門家に聞いてみた（ベネッセ教育情報）,https://news.yahoo.co.jp/articles/27afe387114579195cbe535c1f6491714e470053,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20250822-00010000-benesseks-000-1-view.jpg?exp=10800,2025-08-22T21:30:10+09:00,2025-08-22T21:30:10+09:00,ベネッセ教育情報,benesseks,ベネッセ教育情報,4813,"プログラミングは「教科横断のハブ」である
プログラミングって何の役に立つ？学力との関係は？専門家に聞いてみた
2020年度から小学校で必修化された、プログラミング教育。
「プログラミングって本当に必要なの？」「子どもの学力にどんな影響があるの？」
そんな疑問をお持ちの方も多いのではないでしょうか。

実は、プログラミング教育は、論理的思考力や情報活用力など、すべての教科の学びの土台となる力を育む“教科横断のハブ”として注目されています。単にプログラム言語を覚えるだけのものではないのです。
※文部科学省でプログラミング教育発足当時から関わっている広島工業大学の安藤明伸教授と、ベネッセ教育総合研究所顧問である後藤良秀先生にインタビューしました。
この記事では、プログラミング教育とは何か、なぜ今注目されているのか、子どもの学力との関係や将来にどのように役立つかをご紹介いたします。
そもそもプログラミングとは？　プログラミング教育にはどんなねらいがあるの？
そもそもプログラミングとは？　プログラミング教育にはどんなねらいがあるの？
【そもそもプログラミングとは？】
プログラミングとは、コンピュータに特定の作業を実行させるための指示をすることです。コンピュータに指示を出すためには、「プログラミング言語」という特別な言葉を使用します。

Webサイトやアプリの開発、ゲーム制作、さまざまな自動化ツールなど、プログラミングによって私たちの生活は大きく支えられており、なくてはならないものといえます。

小学校のプログラミング教育は、「プログラミングスキルを習得しよう」というものではなく、プログラミング的思考やプログラムの働きのよさに気付き上手に活用することを身に付けることにあります。そのために、教科とプログラミングを結び付けた教育も大切です。

【プログラミング教育とは？ねらいとは？】
後藤：まず、プログラミング教育のねらいには、どのようなものがありますか？

安藤：プログラミング教育のねらいは大まかに言えば3つあります。
一つ目は、プログラミング的思考を養うこと。
二つ目は、教科の中で扱う場合は、教科の学びをより確実にすること。
三つ目は、プログラムの働きやよさに気付き、上手に活用することですね。

後藤：「子どもたちの論理的思考力を育てる」というのが大きなねらいですね。

安藤：そうです。コンピュータを「魔法の箱」で終わらせてほしくないんです。
ゲームアプリは空から振ってくるわけではないし、チャットのメッセージも直接隣の子に届いているわけではない。すべて「プログラム」で動いているんですね。ボタンを押すと自分のしてほしいことがなされる魔法があるわけではなく、プログラムでちゃんと設計されて、その指示どおりに動いている。そういう仕組みが背後にある、ということに早い段階で気付いてほしいんです。

後藤：すべての詳しい仕組みまで知る必要はないけれども、成り立ちや扱われ方、リテラシー問題も含めて、コンピュータと付き合っていくうえで身に付けておくべき能力ですよね。もうコンピュータなしで生きていくことはできないですから。

安藤：そうです。そしてそれは、教科の内容と深く結び付けて行うことが大切なんですよね。だから「プログラミングは教科横断のハブになり得る」という考え方にもつながってきます。
プログラミングって何の役に立つ？
プログラミングって何の役に立つ？
後藤：プログラミングは「教科横断のハブ」になるとはどういうことでしょうか？　

安藤：プログラミングは、各教科の中核的な存在と関わって、いろいろな教科の「考える力」を育てるもとになります。そのことから、「教科横断のハブ」になると考えています。情報を収集・選択・整理・分析しながら情報技術を適切に活用して、問題を発見し解決に導いたり、自分の考えを形成したりする「情報活用能力」は、国語や算数、理科、社会などすべての教科の土台となる力です。そして、ここにプログラミングが関わることで教科の学びを一気につなげることが可能なのです。

後藤：プログラミングは、今後必要な力の一つに……大きな中核的な力になりますね？　

安藤：そうですね。確かに専門的なプログラミングスキルが身に付くことは大切なんですが、プログラミング言語は目的や時代によって大きく変わりますし。とはいっても、コンピュータの黎明期（物事の始まりとなる時期）からある程度共通する処理があるので、そうした普遍性のある考え方はわかっておくといいですね。

後藤：プログラムを扱うスキルだけでなく、ぜひ情報活用能力も育ててほしいですよね。私は今、科学教育を軸としたSTEAM教育（科学・技術・工学・芸術・数学の5つの分野を統合的に学ぶ教育）をつくる中に、プログラミングを取り入れるということを始めているんです。

安藤：すごくいいですね。STEAM教育とプログラミングは相性がいいです。義務教育の間に、何かやりたいことや不便なことがあったら、「じゃあ何かつくってみよう」「自分でもどうにかできそう」というプログラミングに対する自己効力感を養ってほしいです。
プログラミングで学力は上がる!?　学力との関係は？
プログラミングで学力は上がる!?　学力との関係は？
後藤：プログラミングと学力の関係はどう見られていますか？

安藤：「プログラミングで学力が上がる」という議論は、「何をもって学力とするか」という問題があるので、なかなか難しいなって思っていて……単純な話ではないですよね。でもプログラミング学習は、論理的思考力や情報活用能力など全教科に必要な教科学力の土台に加えて、各教科でバラバラに学んだ内容を統合しながら作るという意味で「教科横断のハブ」と言えるので、結果として学力が伸びる傾向にはあるのかなと思います。

後藤：私も、比較・分類・関係付け・制御・まとめるなど、さまざまなことを行う「思考」は、プログラミングでたくさん経験ができるので、思考力が身に付くと感じます。それは、学力を形成するうえでもきっと役に立つのだろうなと思います。義務教育の中では、どうしても知識内容に目が行きがちですが、比較・分類・まとめるなどの思考をコツコツ繰り返すことで、頭が良くなる素地になるはずです。

安藤：理科教育とプログラミングを掛け合わせることも大きな価値がありますよね？　たとえば、電気回路を作ってモーターを回したとして、モーターを逆回転させたかったら、物理的に線をつなぎ直さないといけないところを、プログラムを変えるだけでできるようになるので。

後藤：そうですね！　プログラミングを取り入れることで、具体物がベースとなる自然科学の世界に、論理だけの世界を組み合わせたことで「パラダイム転換（価値観や考え方が根本的に変わること）」してしまったわけですから。ここの価値がもっと広まるといいですね。
調査結果からみる、プログラミング講座受講者の学力との関係は？
【調査結果からみる、プログラミング講座受講者の学力との関係は？】
後藤：進研ゼミプログラミング講座の編集部が行った調査結果があります。2021年～2023年、ベネッセのプログラミング講座を受講した小学3年生～5年生の28,597人を対象に、教科成績への影響に関する調査です。

後藤：その結果、プログラミング講座を受講した期間が長いほど、成績への効果が大きく出ていることがわかりました。
※上記グラフで、プログラミング学習歴がなし、1年未満、1年以上～2年未満、2年以上で学習歴なしとの偏差値差異を矢印の長さで比較

たとえば、算数で出題される正方形の作図の問題は、「図形をいかに少ない手順で効率的に書くか」というプログラミングの考え方が生きる問題であり、受講期間が長いほど、そういった問題がよく解けていました。

プログラミング講座受講歴が長くなるほど成果が出たことから、思考力は一朝一夕で身に付くものではなく、コツコツ続けることで養われていくと考えられます。
プログラミング学習はいつから取り入れるべき？
プログラミング学習はいつから取り入れるべき？
後藤：プログラミング学習は、いつごろから始めるのがよいと思いますか？　

安藤：プログラミング学習は、小学1年生から始めても早すぎることはないと思います。先ほどお話に出た「繰り返しやる」って、とても大事なキーワードですよね。「小学1年生にはプログラミングなんて無理」と決めずに、1年生からやれることから始めて、プログラミングの体験を積み重ね、繰り返すことで、考え方を身に付けてほしいです。

後藤：小学校の6年間は重要ですよね。1年生から考え方を工夫して身に付けていけば、6年生になるころには思考力がぐんと伸びるんじゃないかって考えています。

安藤：そうですね。ただ、手あたり次第に試行錯誤するという話ではなく……たとえば、理科の場合、「何かの違いを見つけるためには対照実験が必要で、条件統制しないとわからないよね？」というような、各教科の中の論理性に基づいた試行錯誤が理想です。その点、プログラミングは感情や推察などがない論理性だけの世界なので、問題を切り分けながらの試行錯誤、すなわち論理的推論が必須だと思っています。

後藤：なるほど、そうですよね。この切り口から見ると、プログラミング学習がいかに重要かがわかりますね。

安藤：あとコンピュータって何回間違っても怒らないんですよね。気分によって結果も変わらないし、すごく中立的な立場だと思います。安心して何回でも間違えることができるし、結果がすぐに返ってくる……だから、ある意味心理的安全性があるというか。試行錯誤しやすくて成功体験につながるんです。一つ成功体験があれば、他のことにも応用して同じように考えることができると思います。

後藤：今や学力は、各教科の知識だけで測るものではなくなっています。プログラミング的思考のように、教科を横断する思考力も大切な学力の一つです。暗記中心の学習ではなく、知ったことを実際にプログラミングで取り入れてみれば、活用する楽しさ、知ったことが役に立つ体験につながり、それが原動力となって活躍できるようになるのではないでしょうか。
まとめ & 実践 TIPS
まとめ & 実践 TIPS
プログラミング学習は、「教科横断のハブ」となる分野で、単なるスキル習得だけではなく、コンピュータを理解し、論理的に考え、試行錯誤する力を育むことにつながります。

何度間違えても怒られない世界なので、安心してたくさん間違ながらプログラミングでの「デジタルものづくり」の成功体験を積み重ねていけるといいですね。お時間がある時は、保護者のかたもお子さまと一緒に、プログラミングを楽しんでみてください。きっと新たな発見や喜びをお子さまと共有できますよ。

編集協力/海田幹子
プロフィール
安藤 明伸（あんどう　あきのぶ）先生
広島工業大学　情報システム学科教授
中学校の技術科教員、宮城教育大学での勤務を経て、広島工業大学の情報学部 情報システム学科 教授に着任。中央教育審議会の情報ワーキンググループ委員、文部科学省のプログラミング教育に関する手引の作成委員などの経験もあり。学校現場におけるプログラミング教育の重要性を唱え、プログラミング教育やSTEAM教育に関するテキストの執筆や監修も多数。
プロフィール
後藤 良秀（ごとう　よしひで）先生
2018年まで公立小学校校長を務めながら、理科教育や教育課程の専門家として、東京都や文部科学省の研究等にも携わる。現在は、ベネッセ教育総合研究所顧問。",[],[]
