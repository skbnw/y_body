headline,mainEntityOfPage,image,datePublished,dateModified,author,media_en,media_jp,str_count,body,images,external_links
Visual Studioが「MCP」に正式対応　AIによる開発がさらに容易に（＠IT）,https://news.yahoo.co.jp/articles/2cc1550312d8fd0e6e6791f320f9d59225e69516,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20251001-00000003-zdn_ait-000-1-view.jpg?exp=10800,2025-10-01T08:00:12+09:00,2025-10-01T08:00:12+09:00,＠IT,zdn_ait,＠IT,1553,".mcp.jsonの一部（提供：Microsoft）
Microsoftは2025年8月19日（米国時間）、統合開発環境（IDE）「Visual Studio 2022」のバージョン17.14.13を公開し、MCP（Model Context Protocol）に正式対応したと発表した。Visual Studioでの作業に関する情報をリアルタイムでAI（人工知能）エージェントに送信することで、開発者は「GitHub Copilot」などのAIエージェントをこれまで以上に活用できるようになるという。
Visual StudioでMCPを利用する3つのメリット
MCPは、AIエージェントが外部データソースに接続するための通信プロトコルだ。MCPを利用することで、開発者はツールごとの連携機能を用意する必要がなくなり、AIエージェントは、データベースやコード検索などの多様な外部サービスに共通の手順で接続できるようになる。

　Microsoftは、Visual StudioでMCPを利用することのメリットとして以下の3つを挙げる。

カスタムワークフロー

　開発者が自身で設置したMCPサーバや、既にあるMCPサーバを利用して、反復的なタスクの自動化、データベースの操作、社内APIの呼び出しなどの操作を、GitHub Copilotから直接実行できる。

社内システムやデータとの連携

　機密データの安全性を保ちながら、AIエージェントを社内システムに接続できる。

的確な対話

　GitHub Copilotが、プロジェクトの詳細情報を参照したり、関連システムにアクセスしたりできるようにすることで、より的確な回答を得られる。
MCP対応で何が変わった？
MCPクライアント機能

　設定ファイル「.mcp.json」をソリューションに追加すると、Visual Studioが自動的に検出し、ローカルまたはリモートのMCPサーバに接続できるようになる。

シームレスな認証連携

　Visual Studioで使っているアカウント情報をそのまま利用して、安全なMCPサーバにサインインできる。GitHubアカウントやMicrosoftアカウントなど、接続先サーバが採用している認証方法を開発者が意識する必要はなく、Visual Studioが自動で適切な手段を選択して認証する。

新しいMCPサーバへの簡単な接続

　従来は手動でJSONファイルを編集する必要があったMCPサーバへの接続が簡素化され、ボタンをクリックするだけで、Visual Studioに新しいMCPサーバを追加できるようになった。具体的には、以下の2つの追加方法を利用可能だ。


1. Webサイトから直接インストールする

3. Webリポジトリで公開されているMCPサーバの接続設定を、自身のVisual Studioに追加、構成できる。Webページにある「Install in VS」（VSにインストール）ボタンをクリックするだけで、自動で接続設定が完了する


6. Visual Studio内で追加する

8. GitHub Copilotとのチャット欄のツール選択画面に新設されたGUI（グラフィカルユーザーインタフェース）を操作することで、対話形式でサーバ情報を設定できる



企業向けのガバナンス制御

　MCPサーバへの接続とGitHubのポリシー設定が連動したことで、企業のIT管理者は、社内におけるMCPサーバの利用を管理、制御できるようになった。IT管理者はGitHubのポリシー設定画面で、社内の全ユーザーに対してMCPサーバへの接続機能の有効／無効を切り替えることが可能だ。
＠IT",[],[]
