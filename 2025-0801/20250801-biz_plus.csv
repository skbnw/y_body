headline,mainEntityOfPage,image,datePublished,dateModified,author,media_en,media_jp,str_count,body,images,external_links
【Copilot】「チャットだけ」は損してる……あなたの分身を作る“時短すぎる機能”2つ（ビジネス＋IT）,https://news.yahoo.co.jp/articles/67ffaf0453205c83e05170474c118c6c448ba6d1,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20250801-00169077-biz_plus-000-1-view.jpg?exp=10800,2025-08-01T07:10:06+09:00,2025-08-01T07:10:06+09:00,ビジネス＋IT,biz_plus,ビジネス＋IT,3634,"時短すぎる「ページ機能」と「ノートブック機能」とは？
WordやExcel、PowerPoint、PDF、チャット履歴などを1つの場所に集約し、Copilotが横断的に分析・提案してくれたら──そう感じたことはありませんか？ Copilotの活用で業務効率は飛躍的に向上しましたが、チャット上のやり取りだけで終わってしまうのは、正直もったいないです。今こそ“使い捨てチャット”から卒業し、Copilotを「知の資産」に変える時。実現のカギを握るのは「ページ機能」と「ノートブック機能」です。
【詳細な図や写真】【関連記事】【Copilot最新機能】Word・Excel・PowerPointの日常業務はこう変わる、Pythonも超簡単
【ページ機能】Copilotの“神回答”、放置しないで
まずは、Copilotとの会話を“使い捨て”で終わらせないための強力な仕組み、「ページ機能」から見ていきましょう。

　Copilotとの会話で「これは使える」と思った回答があれば、その下に表示される[Pagesで編集]から、簡単にページに転記して保存することができます。

　画面右側に自動的に新しいページが生成されたら、そこからは自分の視点で自由に追記・編集が可能になります。このページ機能はMicrosoft Loopの技術で支えられており、Copilotの示唆を起点に、自分の意見や整理軸を盛り込んだ“進化するナレッジ”として育てていけるのが大きな特徴です。


　さらに、Copilotとの会話を進める中で「これも残しておきたい」と思った情報も、同じページに次々と追加していくことが可能です。

　つまり、Copilotとの対話から得た断片的な知識を、一貫性のある情報資産としてまとめ上げられるのです。

　実際に筆者も、アイデア出しや構想段階でCopilotに“壁打ち”をしながら、気になった回答をどんどんページに保存。後で資料をまとめたり、企画を具体化したりする際のベースとして役立てています。

　Copilotを「その場限りの便利ツール」から、「知の資産を育てる思考エンジン」へと昇華させるカギ──それがこのページ機能です。そして実はこの機能、使い方次第でその真価はさらに跳ね上がります。
一部のプロだけが使いこなす「あのテクニック」
ここからは、一部のプロだけが使いこなしている、ページ機能の活用テクニックを2つ紹介します。

　まず注目すべきは、作成したページを社内の他メンバーと共有できる点。

　Microsoft Loopを基盤とするこの仕組みにより、リアルタイムでの共同編集・追記が可能になります。つまり、Copilotと交わした対話の成果を、プロジェクトチームで磨き上げていくことができるのです。

　たとえば、Copilotとの会話を通じて作成した調査メモやアイデアの整理ページを、プロジェクトメンバーと共有すれば、それぞれの視点や知見を加えながらさらに内容をブラッシュアップしていくことができます。


　また、Copilotで会議の議事メモを作成した場合も、ページとして保存・共有することで、会議の参加者全員に即座に情報を伝達。議事メモの内容に対してコメントを付けたり、次のアクションを追記したりすることで、会議後のフォローアップもスムーズに行えます。

　ちなみに、前回紹介したリサーチツールの回答も、ページにまとめることができます。リサーチツールの回答は量も多いため共有するのが大変ですが、ページにしてしまえば簡単に共有可能です。

　続いて紹介する2つ目の活用テクニックは、Copilotで蓄積した“ナレッジの再起動”です。

　ページにまとめた情報を単なる記録にとどめず、次なるアイデアの“種”として再活用できる点にこそ、Copilot活用の真価があります。

　これまで作成したページは、後の会話でも活用することができます。これによって、Copilotとの会話の中で得られたアイデアや知識を、次のアイデアを生み出すために使ったり、ほかの業務に生かしたりすることが可能です。


　これまでも私たちは、調査の結果や考えたアイデアなど手書きのメモなどにまとめておき、いざ資料作成のときにはメモを参考にしながら作成を進めるという方法をとっていました。Copilotのページ機能は、こうした「作業メモ」の代わりになる役割を担う存在です。

　これによってページに残したメモが単なる記録にとどまらず、次のアクションに繋がる「情報資産」として活用できる仕組みになっていきます。
【ノートブック機能】WordやExcelなどを「一元管理」
ここからは「ノートブック機能」について解説していきます。

　Copilotのページ機能が1つの会話やテーマを整理する場とすれば、ノートブック機能は関連する複数のページやファイル、メモを横断的に扱う「情報の集積地」のような存在です。

　この機能はページだけではなく、WordやExcel、PowerPoint、PDFなど、さまざまなコンテンツをまとめて管理することができます。そしてノートブック内のCopilotに対して、それらのコンテンツ全体を対象に質問したり、分析や下書き作成を依頼したりすることが可能です。


　ChatGPTでは「プロジェクト」、Geminiでは「NotebookLM」に近いものです。Microsoft 365ユーザーにとっては、Microsoft 365との連携が強化されていくことで、より業務での活用がしやすくなるのではないかと期待されています。

　普段、Microsoft 365を利用して仕事を進めているのであれば、OneDriveやMicrosoft Teams、SharePointに業務で作成した資料が保存されていたり、会議で作成した議事録が何らかの形式で共有されていたりすることが多いでしょう。あるいは、先ほど紹介したCopilotのページ機能を使って、会議のメモを残しているかもしれません。

　こうしたコンテンツをノートブックにまとめておくことで、業務に関する疑問をCopilotに尋ねたり、会議の進捗を確認したりといった作業を1カ所で効率的に行えるようになります。まるで、業務に特化した自分専用のAIアシスタントを育てていくような感覚です。


　さらにノートブックの大きな特徴は、登録されたコンテンツを基にCopilotが回答を生成するという点です。これにより、通常のCopilotチャットよりも文脈に沿った、正確で密度の高い回答が得られる可能性が高まります。
時短すぎ……「全部投げる」だけで提案書も課題分析も完成
ノートブックは、登録するコンテンツによってさまざまな使い方ができます。たとえば、私の場合は資料を作成するときに、参考にしたい文献のPDFをノートブックに登録しておき、Copilotに内容をまとめてもらったり、複数の文献を比較してもらったりしています。

　また、顧客情報や市場データを登録しておけば、Copilotにそれらを分析してもらい、顧客の課題や状況を把握することもできます。さらに、顧客の課題をまとめた資料と製品情報のファイルを組み合わせて、提案書の草案を考えてもらうといった使い方も可能です。

　そのほかにも、マニュアルや教材を登録して、理解度を確認するためのテスト問題を作成してもらうなど、業務に合わせて柔軟に活用できるのがノートブックの魅力です。
【要注意】知っておきたい“落とし穴”と今後の新機能
ノートブックは比較的新しい機能であり、今年の5月ごろから一般提供が開始されました。そのため現時点では下記のような制限もあり、活用のためには頭の隅に入れておくと良いでしょう。


・ノートブックが参照できるファイル数は最大20個
（それ以上登録できるが20個までしか参照しない）

対応しているファイル形式は .docx、.pptx、.xlsx、.pdf、.loop、OneNoteページ

インターネット上のWebリンクは追加できない

音声で概要を聞くことができる機能は英語のみ対応

　さらに、今後の機能追加予定では、ノートブックの中でリサーチツールが利用できる機能などがあります。

　自分で登録した情報を基に、リサーチツールでより深い分析ができるようになるため、ページ数の多い情報をまとめる場合などに楽になりそうですね。ほかにもワンクリックでノートブック内の情報を要約する機能など、使いはじめのユーザーにうれしい機能も予定されており、今後のアップデートも楽しみです。

　次回は、近ごろ徐々に増えてきているCopilotのパーソナライズ関連の機能について紹介したいと思います。
執筆：内田洋行 太田 浩史",[],[]
MCPとは何かをわかりやすく解説、なぜOpenAIがアンソロピックと手を組むのか（ビジネス＋IT）,https://news.yahoo.co.jp/articles/9935b91e8ca1555e30ca508c3fb578c359a882c8,https://newsatcl-pctr.c.yimg.jp/t/amd-img/20250801-00168155-biz_plus-000-1-view.jpg?exp=10800,2025-08-01T06:10:07+09:00,2025-08-01T06:10:07+09:00,ビジネス＋IT,biz_plus,ビジネス＋IT,3404,"MCPとは、AIエージェントの標準プロトコルとして急速に普及している「Model Context Protocol」の略（Photo/Shutterstock.com）
生成AI「Claude」の開発企業として知られるアンソロピックが発表したModel Context Protocol（MCP）が、AIエージェントの標準プロトコルとして急速に普及している。競合のOpenAIもAgents SDKでのサポートを表明し、マイクロソフトもPlaywright MCPを公開するなど、業界全体での採用が進む。ここでは、MCPの基本概念から実装例まで、AIエージェントのエコシステムを変革する可能性を秘めた「MCP」についてわかりやすく解説する。
【詳細な図や写真】GithubにおけるMCPスター数の推移（出典：Hugging Face）
MCPとは何かをわかりやすく解説
Claudeの開発企業として知られるアンソロピックが2024年11月に発表したModel Context Protocol（MCP）が生成AIでの技術標準になってきた。


　MCPとは、これまでバラバラだったAIエージェント用ツールの提供方法と呼び出し方を共通化し、エコシステムを形成しやすくした画期的な仕組みだ。

　従来のAIアプリケーションは、個別のツールやデータソースとの連携に独自の実装が必要だったが、MCPを利用することで、標準化されたインターフェースを通じてさまざまなツールやデータにアクセスできるようになる。

　これにより、AIアプリケーションの開発効率が大幅に向上しただけでなく、異なるAIモデル間での相互運用性も大きく改善している。

　たとえば、家電メーカーが「製品の取扱説明書を検索できるツール」をMCP対応（サーバ）で公開すると、ClaudeデスクトップやGitHub Copilotなど、さまざまなAIエージェントがその検索機能を即座に利用できるようになるのだ。いわば「USB規格のようなプラグアンドプレイ」と呼べるもので、AIツール間の連携を飛躍的に高める仕組みとなる。

　一般的に、MCPが公開される際、「MCPサーバ」と呼ばれることがほとんどだが、実際のところは、クライアント側で動作するケースが多く、プラグイン拡張機能として認識するほうが理解しやすいかもしれない。

　これまでにさまざまなMCPサーバが公開されているが、特に注目されるMCPとして、マイクロソフトのPlaywright MCPが挙げられる。これは、ブラウザ自動化ライブラリ「Playwright」のMCP対応版で、AIエージェントがWebサイトと直接やり取りできる環境を提供する。


　スクリーンショットベースではなく、アクセシビリティツリーを利用したアプローチを採用しており、より安定的かつ効率的なWebサイトの操作が可能だ。

　Playwright MCPの機能は多岐にわたり、ブラウザのナビゲーション、フォーム入力、要素のクリック、ドラッグ＆ドロップなど、人間が行うあらゆる操作をAIエージェントが実行できる。さらに、タブ管理やPDF保存、ファイルアップロードといった高度な機能も実装されており、実用的なWeb自動化シナリオに対応することができる。

　MCPの理解をさらに深めるには、実際に手を動かすのが重要だ。以下では実際にCursorとPlaywright MCPを使ったWebテストAIエージェントとWebクロールAIエージェントを実装してみたい。
CursorとMCPで実装する超簡単WebテストAIエージェント
このセクションでは、CursorのAIエージェントとPlaywright MCPを使ったWebテストAIエージェントを実装する。

　実装が完了すれば、自然言語で任意のWebサイトにおけるログインテストなどの自動化が可能となる。

　まず任意のプロジェクトフォルダを作成し、Cursorで開く。

　その後、CursorのSettingセクションに行き、MCPを選択する。すると、以下のような「MCP Servers」と記載されたページが出現する。


　青色のボタン「Add new global MCP sever」をクリックすると、以下のようなJSONファイルが作成される。ここでPlaywright MCPの設定を行っていく。


　Playwright MCPの設定を行うには、GithubのPlaywrightリポジトリにアクセスし、Example Configのコードをコピーする。


　このコードを先ほどCursor内に作成したJSONファイルに貼り付ける。


　設定はこれで完了。

　MCP Serversに、以下のようなPlaywrightのツール群が表示されていれば、設定は成功となる。


　今回はWebのログイン設定自動化テストを実行したいので、テストで利用できるこのサイトを使用する。


　Cursorのチャットセクションで「Agent」がオンになっており、さらにコンテクスト欄で「mcp.json」が表示されていることを確認する。


　後はチャット欄に、以下のプロンプトを入力するだけだ（今回、Cursorの無料版を使ったため、指示の混乱を避けるために英語のプロンプトを使用したが、有料版であれば日本語のプロンプトでも問題ないはずだ）。

英語：
Please go to the following website and fill login information and click the login button

日本語：
以下のWebサイトにアクセスし、ログイン情報を入力して、ログインボタンをクリックしてください。

　すると、CursorのAIエージェントがPlaywrightのツールを活用して、ログインフォームを見つけ出し、必要な情報を入力、ログインボタンをクリックするという一連の動作を自動で実行してくれる。
CursorとMCPで実装するWebクロールAIエージェント
次に、CursorとPlaywright MCPによる、Webクロールの実験を行ってみたい。

　ここではOxylabsのWebクロールテスト用ページを使用する。


　Cursor内におけるPlaywright MCPの設定が完了している場合、プロンプトを変更するだけで、Webクロールの自動化が可能だ。

　今回は、クロールした情報をJSON形式で保存するためのプロンプトを追加する。

プロンプト：
英語
Can you go to this scraping test website to collect product data (name, price, star, genre, availability) and make JSON file?

日本語
　以下のクロールテスト用Webサイトにアクセスし、商品データ（商品名、価格、スターの数、ジャンル、在庫の有無）を収集し、JSONファイルにまとめてください。

　このプロンプトを入力し、実行すると、CursorエージェントはPlaywrightツールを使い、クロールテスト用のWebサイトにアクセスし、指示した商品情報を収集、以下のようにJSONファイルに格納するまでの動作を全自動で実行できた。


　プロンプトの工夫により、対象サイトが複数ページであっても対応可能であることも確認できた。

　AIエージェントとしては、Cursorのほか、WindsurfやClaudeデスクトップなども利用することができる。
Playwright MCP以外の有名なMCPサーバとは
またMCPに関しては、Playwright MCPのほかにも多数のMCPサーバが公開されており、これらを連携し、さまざまなアプリケーションを構築することが可能だ。Githubのmodelcontextprotocolリポジトリによると、DaVinci Resolve、Figma、Slack、Spotify、Stripe、UnityなどのMCPサーバが利用可能だ。
執筆：細谷 元、構成：ビジネス＋IT編集部",[],[]
